name: Release Build (Multi‑Platform)

# タグ push (v1.2.3 形式) または Release の公開時にトリガー
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        nim-version: ['2.x']

    steps:
      # 1. コード取得
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. OpenSSL 開発環境のインストール
      - name: Install OpenSSL (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev

      - name: Install OpenSSL (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install openssl
          echo "CPPFLAGS=-I$(brew --prefix openssl)/include" >> $GITHUB_ENV
          echo "LDFLAGS=-L$(brew --prefix openssl)/lib" >> $GITHUB_ENV

      - name: Install OpenSSL (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          choco install openssl.light -y
          # Chocolatey で入るパスを環境変数に追加
          $opensslDir = 'C:\Program Files\OpenSSL-Win64'
          echo "LIB=$opensslDir\lib"     | Out-File -Encoding utf8 -Append $Env:GITHUB_ENV
          echo "INCLUDE=$opensslDir\include" | Out-File -Encoding utf8 -Append $Env:GITHUB_ENV

      # 3. Nim セットアップ
      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: ${{ matrix.nim-version }}

      # 4. キャッシュ（Nimble）
      - name: Cache Nimble packages
        uses: actions/cache@v4
        if: runner.os != 'Windows'      # Windows はキャッシュ不要 or 別途設定
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-${{ hashFiles('**/*.nimble') }}
          restore-keys: ${{ runner.os }}-nimble-

      # 5. Nimble インストール＆依存解決
      - name: Setup Nimble & install deps
        run: |
          nimble install --depsOnly -y

      # 6. Release ビルド (SSL 対応)
      - name: Build (Release with SSL)
        run: |
          nimble build -d:ssl

      # 7. GitHub Release 作成（タグ push トリガー時のみ）
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        with:
          tag_name:    ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft:       false
          prerelease:  false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8. Release アセット（ビルドバイナリ）をアップロード
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url:     ${{ steps.create-release.outputs.upload_url || github.event.release.upload_url }}
          asset_path:     ./bin/yourapp     # 出力ディレクトリを適宜調整
          asset_name:     yourapp-${{ github.ref_name }}-${{ runner.os }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
